# Clang 15.0.0
build --python_path="/usr/bin"

build --cxxopt='-std=c++17'
build --host_cxxopt='-std=c++17'
build --define compiler=clang-15
build --repo_env=CC=clang-15
build --noincompatible_remove_legacy_whole_archive
build --enable_platform_specific_config
build --define=with_xla_support=true
build --experimental_cc_shared_library
build --experimental_link_static_libraries_once=false
build --copt="-Wno-all"
build --copt="-Wno-extra"
build --copt="-Wno-deprecated"
build --copt="-Wno-deprecated-declarations"
build --copt="-Wno-ignored-attributes"
build --copt="-Wno-array-bounds"
build --copt="-Wunused-result"
build --copt="-Werror=unused-result"
build --copt="-Wswitch"
build --copt="-Werror=switch"
build --copt="-Wno-error=unused-but-set-variable"
build --define=no_aws_support=true
build --define=no_hdfs_support=true
build --action_env TF_REVISION="3c3ed183552eba6b8a7d5dd71c572ec6ff226f1e"
build --experimental_repo_remote_exec

# This config refers to building CUDA op kernels with nvcc.
build:cuda --repo_env TF_NEED_CUDA=1
build:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain
build:cuda --@local_config_cuda//:enable_cuda

# This config refers to building CUDA op kernels with clang.
build:cuda_clang --config=cuda
build:cuda_clang --repo_env TF_CUDA_CLANG=1
build:cuda_clang --@local_config_cuda//:cuda_compiler=clang